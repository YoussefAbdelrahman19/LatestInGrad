@model GradProjectV5.Models.RegisterViewModel

@{
    ViewBag.Title = "إنشاء حساب ";

    Layout = "~/Views/Shared/_Layout.cshtml";

}

<h2>@ViewBag.Title.</h2>

@Html.AntiForgeryToken()
<h4>Create a new account.</h4>
<hr />
@Html.ValidationSummary(null, new { @class = "text-danger" })
@using (Html.BeginForm("Register", "Account",
    FormMethod.Post,
    new {id = "RegisterForm"}))

{



    <div class="form-group">
        <div class="col-sm-2">
            <label class="control-label">نوع الحساب </label>

        </div>
        <div class="col-sm-10">
            <select id="ddl_accouttype" class="form-control"></select>
        </div>
    </div>
    <div class="form-group">
        @Html.LabelFor(m => m.Email, new {@class = "col-sm-2 "})
        <div class="col-sm-10">
            @Html.TextBoxFor(m => m.Email, new {@class = "form-control"})
            @Html.ValidationMessageFor(m => m.Email, null, new {@class = "text-danger"})
        </div>
    </div>
    <div class="form-group">

        @Html.LabelFor(m => m.Password, new {@class = "col-sm-2 "})
        <div class="col-sm-10">
            @Html.PasswordFor(m => m.Password, new {@class = "form-control"})
            @Html.ValidationMessageFor(m => m.Password, null, new {@class = "text-danger"})

        </div>
    </div>
    <div class="form-group">
        @Html.LabelFor(m => m.ConfirmPassword, new {@class = "col-sm-2 "})
        <div class="col-sm-10">
            @Html.PasswordFor(m => m.ConfirmPassword, new {@class = "form-control"})
            @Html.ValidationMessageFor(m => m.ConfirmPassword, null, new {@class = "text-danger"})

        </div>
    </div>
    <div class="form-group">
        <div class=" col-md-5"></div>
        <div class=" col-md-2">
            <input type="submit" class="btn btn-primary" value="Register"/>
        </div>
        <div class=" col-md-5"></div>
    </div>
}



@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
    <script>
        $(document).ready(function (){
            LoadAccountTypes();
        });


        function LoadAccountTypes() {
            $('#ddl_accouttype option').each(function () {
                $(this).remove();
            });
            var url = "@Url.Action("LoadRoles", "Account")";
            var result = CreateAjaxRequest(url, "get", {});
            $("#ddl_accouttype").append('<option value="0" >--Please Select--</option>');
            for (var i in result) {
                $("#ddl_accouttype").append('<option value=' + result[i].Name + '>' + result[i].Name+ '</option>');
            }

        }

        $("#RegisterForm").submit(function() {
            var x = GetRoleId();
           

            if (x == 0) {
                alert("من فضلك إختار نوع الحساب");
                return false;
            }
        });
        function GetRoleId() {
            var typename = $("#ddl_accouttype").val();
            if (typename == 0)
                return 0;
            else {
                var url = "@Url.Action("GetRoleId","Account")";
                CreateAjaxRequest(url, "post", { RoleName: typename});
                return id;
            }



            }

        function CreateAjaxRequest(url, requesttype, form_data) {
            var resultData = null;
            $.ajax({
                url: url,
                type: requesttype,
                async: false,
                datatype: 'JSON',
                contentType: "application/json",
                data: JSON.stringify(form_data),
                success: function (result) { resultData = result }
            });
            return resultData;
        }

    </script>
}
}